{"version":3,"file":"parseBanners.js","sources":["parseBanners.js"],"sourcesContent":["const setBanner = (function () {\n  const url = \"https://anettaschool.ru/banners-page\";\n\n  async function fetchBannersData() {\n    try {\n      const response = await fetch(url);\n      return await response.text();\n    } catch (error) {\n      console.error(\"Отсутствуют данные: \", error);\n      throw error;\n    }\n  }\n\n  async function getBanners() {\n    const lessonList = document.querySelector(\".xdget-lessonList\");\n    const streamTable = document.querySelector(\".stream-table\");\n\n    if (!lessonList && !streamTable) {\n      console.error(\"Нет элементов\");\n      return;\n    }\n\n    try {\n      const container = document.createElement(\"div\");\n      const bannerData = await fetchBannersData();\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(bannerData, \"text/html\");\n      const bannersElements = Array.from(doc.querySelectorAll(\".banner-item\"));\n\n      let count = 0;\n\n      container.classList.add(\"banner-wrapper\");\n\n      bannersElements.forEach((banner) => {\n        container.appendChild(banner);\n      });\n\n      lessonList ? lessonList.prepend(container) : streamTable.append(container);\n\n      function rotateBanner() {\n        const lastBanner = bannersElements.pop();\n        bannersElements.unshift(lastBanner);\n        container.innerHTML = \"\";\n\n        bannersElements.forEach((banner) => {\n          container.appendChild(banner);\n          banner.classList.toggle(\"active-banner\");\n        });\n\n        count = ++count % bannersElements.length;\n\n        setTimeout(() => { \n          bannersElements.forEach((banner) => {\n            banner.classList.toggle(\"active-banner\");\n          });\n        }, 4000);\n      }\n\n      setInterval(rotateBanner, 8000);\n    } catch (error) {\n      console.error(\"Ошибка getBanners: \", error);\n    }\n  }\n  return { init: getBanners }\n})();\n\ndocument.addEventListener(\"DOMContentLoaded\", setBanner.init);"],"names":["setBanner","url","init","async","lessonList","document","querySelector","streamTable","container","createElement","bannerData","await","fetch","text","error","console","doc","DOMParser","parseFromString","bannersElements","Array","from","querySelectorAll","count","classList","add","forEach","appendChild","banner","prepend","append","setInterval","lastBanner","pop","unshift","innerHTML","toggle","length","setTimeout","addEventListener"],"mappings":"AAAA,IAAMA,WAAY,KAChB,IAAMC,EAAM,uCA8DZ,MAAO,CAAEC,KAlDTC,iBACE,IAAMC,EAAaC,SAASC,cAAc,mBAAmB,EACvDC,EAAcF,SAASC,cAAc,eAAe,EAE1D,GAAKF,GAAeG,EAKpB,IACE,IAAMC,EAAYH,SAASI,cAAc,KAAK,EAC9C,IAAMC,EAAaC,MArBvBR,UACE,IAEE,OAAOQ,MADUA,MAAMC,MAAMX,CAAG,GACVY,KAAK,CAI7B,CAHE,MAAOC,GAEP,MADAC,QAAQD,MAAM,uBAAwBA,CAAK,EACrCA,CACR,CACF,GAa8C,EAEpCE,GADS,IAAIC,WACAC,gBAAgBR,EAAY,WAAW,EAC1D,IAAMS,EAAkBC,MAAMC,KAAKL,EAAIM,iBAAiB,cAAc,CAAC,EAEnEC,EAAQ,EAEZf,EAAUgB,UAAUC,IAAI,gBAAgB,EAExCN,EAAgBO,QAAQ,IACtBlB,EAAUmB,YAAYC,CAAM,CAC9B,CAAC,EAEDxB,EAAaA,EAAWyB,QAAQrB,CAAS,EAAID,EAAYuB,OAAOtB,CAAS,EAqBzEuB,YAnBA,WACE,IAAMC,EAAab,EAAgBc,IAAI,EACvCd,EAAgBe,QAAQF,CAAU,EAClCxB,EAAU2B,UAAY,GAEtBhB,EAAgBO,QAAQ,IACtBlB,EAAUmB,YAAYC,CAAM,EAC5BA,EAAOJ,UAAUY,OAAO,eAAe,CACzC,CAAC,EAEDb,EAAQ,EAAEA,EAAQJ,EAAgBkB,OAElCC,WAAW,KACTnB,EAAgBO,QAAQ,IACtBE,EAAOJ,UAAUY,OAAO,eAAe,CACzC,CAAC,CACH,EAAG,GAAI,CACT,EAE0B,GAAI,CAGhC,CAFE,MAAOtB,GACPC,QAAQD,MAAM,sBAAuBA,CAAK,CAC5C,MA3CEC,QAAQD,MAAM,eAAe,CA4CjC,CAC0B,CAC3B,GAAE,EAEHT,SAASkC,iBAAiB,mBAAoBvC,UAAUE,IAAI"}